[TARGET FILE] test-input-1.cc
::::: id
test-input-1.cc#1
::::: spelling
independentVariable
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:7:11
::::: comment
(none)
::::: type
const int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#2
::::: spelling
independentFunction
::::: kind
function_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:8:5
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: is_template
False
::::: declaration
int independentFunction();
::::: declaration_pretty
int independentFunction();
::::: return_type
int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#3
::::: spelling
Int
::::: kind
typedef_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:9:26
::::: comment
(none)
::::: canonical_type
std::vector<int, std::allocator<int>>
::::: type_alias_chain
[{'spelling': 'Int', 'location': 'test-input-1.cc:9:26'}, {'spelling': 'std::vector<int>', 'location': '/Library/Developer/CommandLineTools/usr/include/c++/v1/vector:447:28'}]
::::: type_alias_underlying_type
std::vector<int>
==================
::::: id
test-input-1.cc#4
::::: spelling
MyClass
::::: kind
class_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:12:7
::::: comment
comment for MyClass
::::: specifier
[]
::::: base_clause
[]
::::: POD
False
::::: is_template
False
::::: declaration
class MyClass;
::::: declaration_pretty
class MyClass;
::::: size
48
::::: type
MyClass
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 48}
::::: is_abstract
True
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#5
::::: spelling
property1
::::: kind
field_declaration
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:13:6
::::: comment
(none)
::::: static_member
False
::::: access
private
::::: type
int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#6
::::: spelling
method1
::::: kind
method
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:14:14
::::: comment
(none)
::::: specifier
[]
::::: method_property
['static']
::::: no_exception_guarantee
False
::::: args_list
[]
::::: access
private
::::: is_template
False
::::: declaration
void method1();
::::: declaration_pretty
void method1();
::::: return_type
void
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#7
::::: spelling
MyClass
::::: kind
constructor
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:17:2
::::: comment
comment for MyClass()
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: access
public
::::: is_template
False
::::: declaration
MyClass();
::::: declaration_pretty
MyClass();
::::: constructor_kind
default
::::: return_type
None
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#8
::::: spelling
MyClass
::::: kind
constructor
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:18:2
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[('const MyClass&', '')]
::::: access
public
::::: is_template
False
::::: declaration
MyClass(const MyClass&);
::::: declaration_pretty
MyClass(const MyClass&);
::::: constructor_kind
copy
::::: return_type
None
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#9
::::: spelling
MyClass
::::: kind
constructor
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:19:2
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[('int', 'a'), ('Int', 'b')]
::::: access
public
::::: is_template
False
::::: declaration
MyClass(int a, Int b);
::::: declaration_pretty
MyClass(int a, Int b);
::::: return_type
None
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#10
::::: spelling
method2
::::: kind
method
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:20:6
::::: comment
(none)
::::: specifier
[]
::::: method_property
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: access
public
::::: is_template
False
::::: declaration
Int method2();
::::: declaration_pretty
Int method2();
::::: return_type
Int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#11
::::: spelling
MyClass
::::: kind
constructor
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:21:2
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[('MyClass&&', '')]
::::: access
public
::::: is_template
False
::::: declaration
MyClass(MyClass&&);
::::: declaration_pretty
MyClass(MyClass&&);
::::: constructor_kind
move
::::: return_type
None
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#12
::::: spelling
operator+
::::: kind
method
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:22:10
::::: comment
(none)
::::: specifier
['noexcept']
::::: method_property
[]
::::: no_exception_guarantee
True
::::: args_list
[('const MyClass&', '')]
::::: access
public
::::: is_template
False
::::: declaration
MyClass operator+(const MyClass&) noexcept;
::::: declaration_pretty
MyClass operator+(const MyClass&) noexcept;
::::: return_type
MyClass
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#13
::::: spelling
operator int
::::: kind
conversion_function
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:23:2
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: access
public
::::: is_template
False
::::: declaration
operator int();
::::: declaration_pretty
operator int();
::::: return_type
int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#14
::::: spelling
property2
::::: kind
field_declaration
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:26:6
::::: comment
comment for property2
::::: static_member
False
::::: access
private
::::: type
Int
{'canonical_type': 'std::vector<int, std::allocator<int>>', 'is_array': False, 'is_type_alias': True, 'is_type_param': False, 'type_alias_chain': [{'spelling': 'Int', 'location': 'test-input-1.cc:9:26'}, {'spelling': 'std::vector<int>', 'location': '/Library/Developer/CommandLineTools/usr/include/c++/v1/vector:447:28'}], 'type_size': 24, 'type_alias_underlying_type': 'std::vector<int>'}
::::: POD
False
::::: size
24
==================
::::: id
test-input-1.cc#15
::::: spelling
propertye3
::::: kind
field_declaration
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:31:14
::::: comment
comment for property 3
still comment for property 3
::::: static_member
False
::::: access
private
::::: type
const float
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#16
::::: spelling
InnerClass
::::: kind
class_declaration
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:33:8
::::: comment
(none)
::::: specifier
[]
::::: base_clause
[]
::::: POD
True
::::: access
private
::::: is_template
False
::::: declaration
class InnerClass;
::::: declaration_pretty
class InnerClass;
::::: size
8
::::: type
MyClass::InnerClass
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 8}
::::: is_abstract
False
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#17
::::: spelling
b
::::: kind
field_declaration
::::: hierarchy
::MyClass::InnerClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
{'spelling': 'InnerClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:33:8'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:34:10
::::: comment
(none)
::::: static_member
False
::::: access
private
::::: type
double
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 8}
::::: POD
True
::::: size
8
==================
::::: id
test-input-1.cc#18
::::: spelling
method3
::::: kind
method
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:37:15
::::: comment
(none)
::::: specifier
['=0']
::::: method_property
['const', 'virtual', 'pure_virtual']
::::: no_exception_guarantee
False
::::: args_list
[]
::::: access
private
::::: is_template
False
::::: declaration
virtual void method3() const =0;
::::: declaration_pretty
virtual void method3() const =0;
::::: return_type
void
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#19
::::: spelling
baz
::::: kind
function_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:41:5
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: is_template
False
::::: declaration
int baz();
::::: declaration_pretty
int baz();
::::: return_type
int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#20
::::: spelling
templateFunc
::::: kind
function_template
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:45:5
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[('T*', 'pt'), ('U*', 'pu'), ('int', 'n')]
::::: is_template
True
::::: declaration
template <typename T, typename U, int N>
int templateFunc(T* pt, U* pu, int n);
::::: declaration_pretty
template <typename T, typename U, int N>
int templateFunc(T* pt, U* pu, int n);
::::: return_type
int
::::: template_args_list
[('typename', 'T'), ('typename', 'U'), ('int', 'N')]
==================
::::: id
test-input-1.cc#21
::::: spelling
foo
::::: kind
function_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:48:5
::::: comment
comment for foo()
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[('int', 'a'), ('Int', 'b')]
::::: is_template
False
::::: declaration
int foo(int a, Int b);
::::: declaration_pretty
int foo(int a, Int b);
::::: return_type
int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#22
::::: spelling
MyClass
::::: kind
constructor
::::: hierarchy
::MyClass
{'spelling': 'MyClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:12:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:51:10
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[('int', 'a'), ('Int', 'b')]
::::: access
public
::::: is_template
False
::::: declaration
MyClass(int a, Int b);
::::: declaration_pretty
MyClass(int a, Int b);
::::: return_type
None
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#23
::::: spelling
NS2
::::: kind
namespace
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:56:11
::::: comment
(none)
==================
::::: id
test-input-1.cc#24
::::: spelling
templateClass
::::: kind
class_template
::::: hierarchy
::NS2
{'spelling': 'NS2', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:56:11'}
::::: parent_kind
namespace
::::: location
test-input-1.cc:59:7
::::: comment
(none)
::::: specifier
[]
::::: base_clause
[]
::::: is_template
True
::::: declaration
template <typename T, char C> class templateClass;
::::: declaration_pretty
template <typename T, char C>
template <typename T, char C> class templateClass;
::::: is_abstract
False
::::: template_args_list
[('typename', 'T'), ('char', 'C')]
==================
::::: id
test-input-1.cc#25
::::: spelling
t_
::::: kind
field_declaration
::::: hierarchy
::NS2::templateClass
{'spelling': 'NS2', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:56:11'}
{'spelling': 'templateClass', 'transparent': False, 'kind': 'class_template', 'location': 'test-input-1.cc:59:7'}
::::: parent_kind
class_template
::::: location
test-input-1.cc:60:4
::::: comment
(none)
::::: static_member
False
::::: access
private
::::: type
T
{'is_type_param': True, 'type_param_decl_location': {'index': 0, 'spelling': 'templateClass', 'location': 'test-input-1.cc:59:7'}, 'is_array': False, 'is_type_alias': False, 'type_size': None}
::::: POD
False
::::: size
None
==================
::::: id
test-input-1.cc#26
::::: spelling
c_
::::: kind
field_declaration
::::: hierarchy
::NS2::templateClass
{'spelling': 'NS2', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:56:11'}
{'spelling': 'templateClass', 'transparent': False, 'kind': 'class_template', 'location': 'test-input-1.cc:59:7'}
::::: parent_kind
class_template
::::: location
test-input-1.cc:61:7
::::: comment
(none)
::::: static_member
False
::::: access
private
::::: type
char
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 1}
::::: POD
True
::::: size
1
==================
::::: id
test-input-1.cc#27
::::: spelling
E
::::: kind
enum_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:65:6
::::: comment
(none)
::::: scoped_enum
False
::::: enum_underlying_type
int
==================
::::: id
test-input-1.cc#28
::::: spelling
a
::::: kind
enum_constant_declaration
::::: hierarchy
::(E)
{'spelling': 'E', 'transparent': True, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:65:6'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:66:2
::::: comment
(none)
::::: enum_value
1
::::: enum_underlying_type
int
::::: type
E
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#29
::::: spelling
b
::::: kind
enum_constant_declaration
::::: hierarchy
::(E)
{'spelling': 'E', 'transparent': True, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:65:6'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:67:2
::::: comment
(none)
::::: enum_value
2
::::: enum_underlying_type
int
::::: type
E
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#30
::::: spelling
customNS
::::: kind
namespace
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:71:11
::::: comment
comment for namespace
==================
::::: id
test-input-1.cc#31
::::: spelling
foo
::::: kind
function_declaration
::::: hierarchy
::customNS
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
::::: parent_kind
namespace
::::: location
test-input-1.cc:72:6
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: is_template
False
::::: declaration
int foo();
::::: declaration_pretty
int foo();
::::: return_type
int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#32
::::: spelling
Class
::::: kind
class_declaration
::::: hierarchy
::customNS
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
::::: parent_kind
namespace
::::: location
test-input-1.cc:73:8
::::: comment
(none)
::::: specifier
[]
::::: base_clause
[]
::::: POD
True
::::: is_template
False
::::: declaration
class Class;
::::: declaration_pretty
class Class;
::::: size
8
::::: type
customNS::Class
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 8}
::::: is_abstract
False
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#33
::::: spelling
staticGlobal
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:76:12
::::: comment
(none)
::::: type
int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#34
::::: spelling
Class
::::: kind
class_declaration
::::: hierarchy
::customNS
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
::::: parent_kind
namespace
::::: location
test-input-1.cc:78:17
::::: comment
(none)
::::: specifier
['final']
::::: base_clause
[]
::::: POD
True
::::: is_template
False
::::: declaration
class Class final;
::::: declaration_pretty
class Class final;
::::: size
8
::::: type
customNS::Class
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 8}
::::: is_abstract
False
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#35
::::: spelling
staticData
::::: kind
variable_declaration
::::: hierarchy
::customNS::Class
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
{'spelling': 'Class', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:78:17'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:79:13
::::: comment
(none)
::::: static_member
True
::::: access
private
::::: type
int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#36
::::: spelling
constData
::::: kind
field_declaration
::::: hierarchy
::customNS::Class
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
{'spelling': 'Class', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:78:17'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:80:12
::::: comment
(none)
::::: static_member
False
::::: access
private
::::: type
const int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#37
::::: spelling
staticConstData
::::: kind
variable_declaration
::::: hierarchy
::customNS::Class
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
{'spelling': 'Class', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:78:17'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:81:19
::::: comment
(none)
::::: static_member
True
::::: access
private
::::: type
const int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#38
::::: spelling
b
::::: kind
field_declaration
::::: hierarchy
::customNS::Class
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
{'spelling': 'Class', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:78:17'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:82:6
::::: comment
(none)
::::: static_member
False
::::: access
private
::::: type
int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#39
::::: spelling
fooFriend
::::: kind
function_declaration
::::: hierarchy
::customNS
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
::::: parent_kind
namespace
::::: location
test-input-1.cc:84:12
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: is_template
False
::::: declaration
int fooFriend();
::::: declaration_pretty
int fooFriend();
::::: return_type
int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#40
::::: spelling
returnSizeT_int
::::: kind
method
::::: hierarchy
::customNS::Class
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
{'spelling': 'Class', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:78:17'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:85:8
::::: comment
(none)
::::: specifier
[]
::::: method_property
[]
::::: no_exception_guarantee
False
::::: args_list
[('int', 'a')]
::::: access
private
::::: is_template
False
::::: declaration
size_t returnSizeT_int(int a);
::::: declaration_pretty
size_t returnSizeT_int(int a);
::::: return_type
size_t
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#41
::::: spelling
returnBool_string_myclass_anotherclass
::::: kind
method
::::: hierarchy
::customNS::Class
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
{'spelling': 'Class', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:78:17'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:86:6
::::: comment
(none)
::::: specifier
[]
::::: method_property
[]
::::: no_exception_guarantee
False
::::: args_list
[('std::string', 's'), ('MyClass', 'obj'), ('int', 'obj2')]
::::: access
private
::::: is_template
False
::::: declaration
bool returnBool_string_myclass_anotherclass(std::string s, MyClass obj, int obj2);
::::: declaration_pretty
bool returnBool_string_myclass_anotherclass(
	std::string s,
	MyClass obj,
	int obj2
);
::::: return_type
bool
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#42
::::: spelling
returnVector_float_vector
::::: kind
method
::::: hierarchy
::customNS::Class
{'spelling': 'customNS', 'transparent': False, 'kind': 'namespace', 'location': 'test-input-1.cc:71:11'}
{'spelling': 'Class', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:78:17'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:87:19
::::: comment
(none)
::::: specifier
[]
::::: method_property
[]
::::: no_exception_guarantee
False
::::: args_list
[('float', 'a'), ('std::vector<int>', 'b')]
::::: access
private
::::: is_template
False
::::: declaration
std::vector<int>& returnVector_float_vector(float a, std::vector<int> b);
::::: declaration_pretty
std::vector<int>& returnVector_float_vector(float a, std::vector<int> b);
::::: return_type
std::vector<int>&
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#43
::::: spelling
classFriend
::::: kind
class_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:90:7
::::: comment
(none)
::::: specifier
[]
::::: base_clause
[]
::::: POD
True
::::: is_template
False
::::: declaration
class classFriend;
::::: declaration_pretty
class classFriend;
::::: size
1
::::: type
classFriend
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 1}
::::: is_abstract
False
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#44
::::: spelling
fooFriend
::::: kind
function_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:91:5
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: is_template
False
::::: declaration
int fooFriend();
::::: declaration_pretty
int fooFriend();
::::: return_type
int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#45
::::: spelling
a1
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:93:5
::::: comment
(none)
::::: type
int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#46
::::: spelling
a2
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:93:10
::::: comment
(none)
::::: type
int*
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 8}
::::: POD
True
::::: size
8
==================
::::: id
test-input-1.cc#47
::::: spelling
m
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:94:20
::::: comment
(none)
::::: type
std::map<int, int>
{'canonical_type': 'std::map<int, int, std::less<int>, std::allocator<std::pair<const int, int>> >', 'is_array': False, 'is_type_alias': True, 'is_type_param': False, 'type_alias_chain': [{'spelling': 'std::map<int, int>', 'location': '/Library/Developer/CommandLineTools/usr/include/c++/v1/map:805:28'}], 'type_size': 24, 'type_alias_underlying_type': ''}
::::: POD
False
::::: size
24
==================
::::: id
test-input-1.cc#48
::::: spelling
foo
::::: kind
function_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:96:5
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: is_template
False
::::: declaration
int foo();
::::: declaration_pretty
int foo();
::::: return_type
int
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#49
::::: spelling
ano
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:101:9
::::: comment
(none)
::::: type
int
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#50
::::: spelling
EEClass
::::: kind
struct_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:102:8
::::: comment
(none)
::::: specifier
[]
::::: base_clause
[]
::::: POD
True
::::: is_template
False
::::: declaration
class EEClass;
::::: declaration_pretty
class EEClass;
::::: size
1
::::: type
EEClass
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 1}
::::: is_abstract
False
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#51
::::: spelling
EE
::::: kind
enum_declaration
::::: hierarchy
::EEClass
{'spelling': 'EEClass', 'transparent': False, 'kind': 'struct_declaration', 'location': 'test-input-1.cc:102:8'}
::::: parent_kind
struct_declaration
::::: location
test-input-1.cc:103:13
::::: comment
(none)
::::: scoped_enum
True
::::: enum_underlying_type
char
::::: access
public
==================
::::: id
test-input-1.cc#52
::::: spelling
ee1
::::: kind
enum_constant_declaration
::::: hierarchy
::EEClass::EE
{'spelling': 'EEClass', 'transparent': False, 'kind': 'struct_declaration', 'location': 'test-input-1.cc:102:8'}
{'spelling': 'EE', 'transparent': False, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:103:13'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:103:25
::::: comment
(none)
::::: enum_value
0
::::: enum_underlying_type
char
::::: type
EEClass::EE
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 1}
::::: POD
True
::::: size
1
==================
::::: id
test-input-1.cc#53
::::: spelling
ee2
::::: kind
enum_constant_declaration
::::: hierarchy
::EEClass::EE
{'spelling': 'EEClass', 'transparent': False, 'kind': 'struct_declaration', 'location': 'test-input-1.cc:102:8'}
{'spelling': 'EE', 'transparent': False, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:103:13'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:103:30
::::: comment
(none)
::::: enum_value
1
::::: enum_underlying_type
char
::::: type
EEClass::EE
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 1}
::::: POD
True
::::: size
1
==================
::::: id
test-input-1.cc#54
::::: spelling
eee1
::::: kind
enum_constant_declaration
::::: hierarchy
::(EnumTy)
{'spelling': 'EnumTy', 'transparent': True, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:105:9'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:105:16
::::: comment
(none)
::::: enum_value
0
::::: enum_underlying_type
unsigned int
::::: type
EnumTy
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#55
::::: spelling
eee2
::::: kind
enum_constant_declaration
::::: hierarchy
::(EnumTy)
{'spelling': 'EnumTy', 'transparent': True, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:105:9'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:105:22
::::: comment
(none)
::::: enum_value
1
::::: enum_underlying_type
unsigned int
::::: type
EnumTy
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#56
::::: spelling
EnumTy
::::: kind
typedef_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:105:29
::::: comment
(none)
::::: canonical_type
EnumTy
::::: type_alias_chain
[{'spelling': 'EnumTy', 'location': 'test-input-1.cc:105:29'}, {'spelling': 'enum EnumTy', 'location': 'test-input-1.cc:105:9'}]
::::: type_alias_underlying_type
enum EnumTy
==================
::::: id
test-input-1.cc#57
::::: spelling
eee1
::::: kind
enum_constant_declaration
::::: hierarchy
::(EnumTy)
{'spelling': 'EnumTy', 'transparent': True, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:105:9'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:105:16
::::: comment
(none)
::::: enum_value
0
::::: enum_underlying_type
unsigned int
::::: type
EnumTy
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#58
::::: spelling
eee2
::::: kind
enum_constant_declaration
::::: hierarchy
::(EnumTy)
{'spelling': 'EnumTy', 'transparent': True, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:105:9'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:105:22
::::: comment
(none)
::::: enum_value
1
::::: enum_underlying_type
unsigned int
::::: type
EnumTy
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#59
::::: spelling
aaaaa
::::: kind
enum_constant_declaration
::::: hierarchy
::((anonymous enum at test-input-1.cc:106:1))
{'spelling': '(anonymous enum at test-input-1.cc:106:1)', 'transparent': True, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:106:1'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:106:8
::::: comment
(none)
::::: enum_value
0
::::: enum_underlying_type
unsigned int
::::: type
(anonymous enum at test-input-1.cc:106:1)
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#60
::::: spelling
bbbbb
::::: kind
enum_constant_declaration
::::: hierarchy
::((anonymous enum at test-input-1.cc:106:1))
{'spelling': '(anonymous enum at test-input-1.cc:106:1)', 'transparent': True, 'kind': 'enum_declaration', 'location': 'test-input-1.cc:106:1'}
::::: parent_kind
enum_declaration
::::: location
test-input-1.cc:106:15
::::: comment
(none)
::::: enum_value
1
::::: enum_underlying_type
unsigned int
::::: type
(anonymous enum at test-input-1.cc:106:1)
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 4}
::::: POD
True
::::: size
4
==================
::::: id
test-input-1.cc#61
::::: spelling
BaseClass
::::: kind
class_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:108:7
::::: comment
(none)
::::: specifier
[]
::::: base_clause
[]
::::: POD
True
::::: is_template
False
::::: declaration
class BaseClass;
::::: declaration_pretty
class BaseClass;
::::: size
1
::::: type
BaseClass
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 1}
::::: is_abstract
False
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#62
::::: spelling
BaseClass2
::::: kind
class_template
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:110:8
::::: comment
(none)
::::: specifier
[]
::::: base_clause
[]
::::: is_template
True
::::: declaration
template <typename T> class BaseClass2;
::::: declaration_pretty
template <typename T>
template <typename T> class BaseClass2;
::::: is_abstract
False
::::: template_args_list
[('typename', 'T')]
==================
::::: id
test-input-1.cc#63
::::: spelling
ClassAgain
::::: kind
class_template
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:112:7
::::: comment
(none)
::::: specifier
[]
::::: base_clause
[]
::::: is_template
True
::::: declaration
template <typename T> class ClassAgain;
::::: declaration_pretty
template <typename T>
template <typename T> class ClassAgain;
::::: is_abstract
False
::::: template_args_list
[('typename', 'T')]
==================
::::: id
test-input-1.cc#64
::::: spelling
VClass
::::: kind
class_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:114:7
::::: comment
(none)
::::: specifier
['final']
::::: base_clause
[{'access': 'private', 'base': 'BaseClass', 'virtual': False}, {'access': 'public', 'base': 'BaseClass2<ClassAgain<int>>', 'virtual': False}, {'access': 'public', 'base': 'EEClass', 'virtual': True}]
::::: POD
False
::::: is_template
False
::::: declaration
class VClass final;
::::: declaration_pretty
class VClass final;
::::: size
8
::::: type
VClass
{'is_type_param': False, 'is_array': False, 'is_type_alias': False, 'type_size': 8}
::::: is_abstract
True
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#65
::::: spelling
VClass
::::: kind
constructor
::::: hierarchy
::VClass
{'spelling': 'VClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:114:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:117:5
::::: comment
(none)
::::: specifier
[]
::::: no_exception_guarantee
False
::::: args_list
[]
::::: access
public
::::: is_template
False
::::: declaration
VClass();
::::: declaration_pretty
VClass();
::::: constructor_kind
default
::::: return_type
None
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#66
::::: spelling
~VClass
::::: kind
destructor
::::: hierarchy
::VClass
{'spelling': 'VClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:114:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:118:13
::::: comment
(none)
::::: specifier
['=0']
::::: destructor_property
['virtual', 'pure_virtual']
::::: no_exception_guarantee
False
::::: args_list
[]
::::: access
public
::::: is_template
False
::::: declaration
virtual ~VClass() =0;
::::: declaration_pretty
virtual ~VClass() =0;
::::: return_type
None
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#67
::::: spelling
foo
::::: kind
method
::::: hierarchy
::VClass
{'spelling': 'VClass', 'transparent': False, 'kind': 'class_declaration', 'location': 'test-input-1.cc:114:7'}
::::: parent_kind
class_declaration
::::: location
test-input-1.cc:119:18
::::: comment
(none)
::::: specifier
['=0']
::::: method_property
['virtual', 'pure_virtual']
::::: no_exception_guarantee
False
::::: args_list
[]
::::: access
public
::::: is_template
False
::::: declaration
virtual void foo() =0;
::::: declaration_pretty
virtual void foo() =0;
::::: return_type
void
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#68
::::: spelling
arrIntPtr
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:122:6
::::: comment
(none)
::::: type
int*[5]
{'is_type_alias': False, 'array_size': 5, 'is_array': True, 'array_element_type': 'int*', 'is_type_param': False, 'type_size': 40}
::::: POD
True
::::: size
40
==================
::::: id
test-input-1.cc#69
::::: spelling
arrChar
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:123:6
::::: comment
(none)
::::: type
char[6]
{'is_type_alias': False, 'array_size': 6, 'is_array': True, 'array_element_type': 'char', 'is_type_param': False, 'type_size': 6}
::::: POD
True
::::: size
6
==================
::::: id
test-input-1.cc#70
::::: spelling
arrVar
::::: kind
variable_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:125:11
::::: comment
(none)
::::: type
BaseClass[]
{'is_type_alias': False, 'array_size': None, 'is_array': True, 'array_element_type': 'BaseClass', 'is_type_param': False, 'type_size': None}
::::: POD
True
::::: size
None
==================
::::: id
test-input-1.cc#71
::::: spelling
returnVoid
::::: kind
function_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:130:1
::::: comment
(none)
::::: specifier
['noexcept']
::::: no_exception_guarantee
True
::::: args_list
[('char*&', 'in')]
::::: is_template
False
::::: declaration
void returnVoid(char*& in) noexcept;
::::: declaration_pretty
void returnVoid(char*& in) noexcept;
::::: return_type
void
::::: template_args_list
[]
==================
::::: id
test-input-1.cc#72
::::: spelling
returnVoid
::::: kind
function_declaration
::::: hierarchy
(none)
::::: parent_kind
(global)
::::: location
test-input-1.cc:130:1
::::: comment
(none)
::::: specifier
['noexcept']
::::: no_exception_guarantee
True
::::: args_list
[('char*&&', 'in')]
::::: is_template
False
::::: declaration
void returnVoid(char*&& in) noexcept;
::::: declaration_pretty
void returnVoid(char*&& in) noexcept;
::::: return_type
void
::::: template_args_list
[]
==================
[Diagnostic #1]
test-input-1.cc:22:10: error: return type 'MyClass' is an abstract class
[Diagnostic #2]
test-input-1.cc:51:10: error: redefinition of 'MyClass'
[Diagnostic #3]
test-input-1.cc:86:68: error: unknown type name 'Another'
[Diagnostic #4]
test-input-1.cc:78:17: warning: class 'Class' does not declare any constructor to initialize its non-modifiable members
[Diagnostic #5]
test-input-1.cc:101:1: error: unknown type name 'Another'
[Diagnostic #6]
test-input-1.cc:114:7: warning: abstract class is marked 'final' [-Wabstract-final-class]
[Diagnostic #7]
test-input-1.cc:125:11: error: definition of variable with array type needs an explicit size or an initializer
[includes]
{'depth': 1, 'included_at': 'test-input-1.cc:2:10', 'file': '/Library/Developer/CommandLineTools/usr/include/c++/v1/vector'}
{'depth': 1, 'included_at': 'test-input-1.cc:3:10', 'file': '/Library/Developer/CommandLineTools/usr/include/c++/v1/map'}
{'depth': 1, 'included_at': 'test-input-1.cc:4:10', 'file': './test-input-2.h'}
{'depth': 2, 'included_at': './test-input-2.h:2:10', 'file': '/Library/Developer/CommandLineTools/usr/include/c++/v1/unordered_map'}
[time indexing] 0.02 sec
[time traverse] 1.42 sec
